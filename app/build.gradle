plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    // id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "de.markusressel.mkdocseditor"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        setProperty("archivesBaseName", "MkDocsEditor_v${versionName}_(${versionCode})")

        multiDexEnabled true

        // Required for LastAdapter
        buildFeatures.dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
        }

        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }

        staging {
            initWith release
            applicationIdSuffix ".debugStaging"
            signingConfig signingConfigs.debug
            minifyEnabled true
            debuggable false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        viewBinding true
        dataBinding true
        compose true
    }

//    experimental.legacyTransform.forceNonIncremental true

    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }

    packagingOptions {
        pickFirst 'META-INF/library-core_release.kotlin_module'
        pickFirst 'META-INF/core_release.kotlin_module'
        pickFirst 'META-INF/library_release.kotlin_module'
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError false
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    implementation project(':data')

    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
    // RxFlow
    implementation "io.github.reactivecircus.flowbinding:flowbinding-android:$flowBindingVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.annotation:annotation:1.5.0'
    implementation 'androidx.browser:browser:1.4.0'

    // Jetpack Compose
    implementation 'com.google.android.material:material:1.7.0'

    debugImplementation "androidx.compose.ui:ui-tooling:1.3.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.3.1"

    implementation "androidx.compose.ui:ui:1.3.1"
    implementation "androidx.compose.material:material:1.3.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.3.1"
    implementation "androidx.compose.runtime:runtime:1.3.1"
    implementation "androidx.compose.foundation:foundation:1.3.1"

    implementation 'androidx.activity:activity-compose:1.6.1'

    // Emoji
    implementation 'androidx.emoji:emoji:1.1.0'
    implementation 'androidx.emoji:emoji-bundled:1.1.0'

    compileOnly "org.glassfish:javax.annotation:$javaxAnnotationVersion"

    // Hilt (Dagger wrapper)
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"

    // Hilt WorkManager integration
    implementation 'androidx.hilt:hilt-work:1.0.0'

    // SingleLiveEvent similar implementation
    implementation "com.github.hadilq.liveevent:liveevent:1.2.0"

    // MikePenz stuff
    //the core iconcis library (without any widgets)
    implementation "com.mikepenz:iconics-core:${iconicsVersion}@aar"
    //this adds all ui view widgets (IconicsButton, IconicsImageView, ...)
    implementation "com.mikepenz:iconics-views:${iconicsVersion}@aar"
    implementation "com.mikepenz:iconics-compose:${iconicsVersion}"

    // fonts
    implementation 'com.mikepenz:google-material-typeface:4.0.0.1-kotlin@aar'
    implementation 'com.mikepenz:material-design-iconic-typeface:2.2.0.8-kotlin@aar'

    // Android Architecture Components
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-compose:$navigationVersion"

    // Android KTX
    implementation "androidx.core:core-ktx:$aacAndroidKtxVersion"
    implementation "androidx.fragment:fragment-ktx:1.5.4"
    implementation "androidx.collection:collection-ktx:1.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.5.1"

    def paging_version = "3.1.1"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    // optional - RxJava2 support
    implementation "androidx.paging:paging-rxjava2-ktx:$paging_version"
    // optional - Jetpack Compose integration
    implementation "androidx.paging:paging-compose:1.0.0-alpha17"

    implementation("io.reactivex.rxjava2:rxkotlin:2.3.0")

    implementation 'com.jakewharton.rxbinding2:rxbinding:2.2.0'
//    implementation 'com.jakewharton.rxbinding4:rxbinding-core:2.2.0'

    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.2'
//    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.2'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-kotlin:2.2.2'
//    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.2.2'
//    implementation 'com.trello.rxlifecycle2:rxlifecycle-android-lifecycle:2.2.2'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android-lifecycle-kotlin:2.2.2'

    // WorkManager
    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

    // RxBus (event bus)
    implementation 'com.eightbitlab:rxbus:1.0.2'

    // Permissions
    implementation 'com.karumi:dexter:6.2.2'

    // Material Drawer
    implementation "com.mikepenz:materialdrawer:${materialdrawerVersion}"
    implementation "com.mikepenz:materialdrawer-nav:${materialdrawerVersion}"
    implementation "com.mikepenz:materialdrawer-iconics:${materialdrawerVersion}"

    // Multi-FABs
    implementation "com.leinardi.android:speed-dial:3.1.1"

    // Dialogs
    implementation 'com.afollestad.material-dialogs:core:3.3.0'
    implementation 'com.afollestad.material-dialogs:input:3.3.0'
    implementation 'com.afollestad.material-dialogs:lifecycle:3.3.0'

    // Code editor
    def codeEditorVersion = "v4.0.1"
//    def codeEditorVersion = "master-SNAPSHOT"
    implementation("com.github.markusressel:KodeEditor:${codeEditorVersion}") { changing = true }

    // Syntax Highlighting
    def codeHighlighterVersion = "v3.0.0"
//    def codeHighlighterVersion = "master-SNAPSHOT"
    implementation("com.github.markusressel.KodeHighlighter:markdown:${codeHighlighterVersion}") {
        changing = true
    }

    // Tutorial messages
    implementation 'com.github.markusressel:TutorialTooltip:v2.0.0'

    // AboutLibraries ("About" screen)
    implementation("com.mikepenz:aboutlibraries:$aboutlibrariesVersion@aar") {
        transitive = true
    }

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // Hilt instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hiltVersion"
    // Hilt local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptTest "com.google.dagger:hilt-compiler:$hiltVersion"
}

configurations.all() {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}