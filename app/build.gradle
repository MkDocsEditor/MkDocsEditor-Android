apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "de.markusressel.mkdocseditor"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        setProperty("archivesBaseName", "MkDocsEditor_v${versionName}_(${versionCode})")

        multiDexEnabled true

        // Required for LastAdapter
        dataBinding.enabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/rxjava.properties'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation project(':data')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"

    // Android KTX

    implementation "androidx.core:core-ktx:$androidKtxVersion"
//    implementation "androidx.fragment:fragment-ktx:$androidKtxVersion"
//    implementation "androidx.collection:collection-ktx:$androidKtxVersion"

    compileOnly "org.glassfish:javax.annotation:$javaxAnnotationVersion"

    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger2Version"
    kapt "com.google.dagger:dagger-compiler:$dagger2Version"
    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$dagger2Version"
    implementation "com.google.dagger:dagger-android:$dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$dagger2Version"

    //the core iconcis library (without any widgets)
    implementation "com.mikepenz:iconics-core:${iconicsVersion}@aar"
    //this adds all ui view widgets (IconicsButton, IconicsImageView, ...)
    implementation "com.mikepenz:iconics-views:${iconicsVersion}@aar"
    implementation 'com.mikepenz:material-design-iconic-typeface:+@aar'

    // RxLifecycle to prevent memory leaks
    def rxLifecycleVersion = rootProject.ext.rxLifecycleVersion
    implementation "com.trello.rxlifecycle2:rxlifecycle:$rxLifecycleVersion"
    implementation "com.trello.rxlifecycle2:rxlifecycle-kotlin:$rxLifecycleVersion"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:$rxLifecycleVersion"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android-lifecycle-kotlin:$rxLifecycleVersion"

    // Android Architecture Components
    implementation "androidx.core:core-ktx:$aacAndroidKtxVersion"

    // Logging
    api "com.github.ajalt:timberkt:${rootProject.ext.timberKtVersion}"

    // RxJava (RxKotlin actually)
    implementation "io.reactivex.rxjava2:rxjava:2.1.12"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation "io.reactivex.rxjava2:rxkotlin:${rootProject.ext.rxKotlinVersion}"

    // RxBinding
    // RxJava binding APIs for Android UI widgets from the platform and support libraries.
    implementation "com.jakewharton.rxbinding2:rxbinding:${rootProject.ext.rxBindingVersion}"
    implementation "com.jakewharton.rxbinding2:rxbinding-support-v4:${rootProject.ext.rxBindingVersion}"
    implementation "com.jakewharton.rxbinding2:rxbinding-design:${rootProject.ext.rxBindingVersion}"

    // RxBus (event bus)
    implementation 'com.eightbitlab:rxbus:1.0.2'

    // LastAdapter
    implementation 'com.github.nitrico.lastadapter:lastadapter:2.3.0'

    // Zoom Layout Container
    implementation 'com.otaliastudios:zoomlayout:1.2.0'

    // AboutLibraries ("About" screen)
    implementation("com.mikepenz:aboutlibraries:$aboutlibrariesVersion@aar") {
        transitive = true
    }

    implementation ('com.github.TeamWanari:websocket-android:1.0.0') {
        exclude module: "app"
    }

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-v4:$supportLibVersion"
    resolutionStrategy.force "com.android.support:appcompat-v7:$supportLibVersion"
    resolutionStrategy.force "com.android.support:design:$supportLibVersion"
}