plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }


        staging {
            initWith release
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    namespace 'de.markusressel.rest'

}

dependencies {
    // moshi
    def moshiVersion = "1.13.0"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    implementation "com.squareup.moshi:moshi-adapters:$moshiVersion"

    //for JVM
    api "com.github.kittinunf.fuel:fuel:${rootProject.ext.fuelVersion}"
    //for Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    api "com.github.kittinunf.fuel:fuel-coroutines:${rootProject.ext.fuelVersion}"
    //for moshi support
    implementation "com.github.kittinunf.fuel:fuel-moshi:${rootProject.ext.fuelVersion}"
    //for Android
    implementation "com.github.kittinunf.fuel:fuel-android:${rootProject.ext.fuelVersion}"

    // okhttp (for websockets)
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'

    def commonsVersion = "master-SNAPSHOT"
    api("com.github.markusressel.commons:commons_core:$commonsVersion") {
        changing = true
    }
    api("com.github.markusressel.commons:commons_logging:$commonsVersion") {
        changing = true
    }
    api("com.github.markusressel.commons:commons_android_core:$commonsVersion") {
        changing = true
    }
    api("com.github.markusressel.commons:commons_android_material:$commonsVersion") {
        changing = true
    }

    // Logging
    api 'com.jakewharton.timber:timber:5.0.1'
    api "com.github.ajalt:timberkt:${rootProject.ext.timberKtVersion}"

//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'androidx.test:runner:1.1.1-alpha01'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1-alpha01'
}

configurations.all() {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}